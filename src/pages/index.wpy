<style lang="less">
  .total-score-section {
    position: relative;
    background: #FFFFFF;
    border-radius: 5rpx;
    margin: 7.5rpx 20rpx 20rpx;
    padding: 20rpx 50rpx;

    &:after {
      clear: both;
      content: '';
      display: block;
    }

    .left-part {
      float: left;
    }

    .right-part {
      float: right;
    }

    .pk {
      position: absolute;
      top: 30rpx;
      left: 45%;
      font-size: 90rpx;
    }
    .today-score, .this-score {
      font-size: 25rpx;
      color: #333;
    }
  }
  .userinfo {
    display: flex;
    flex-direction: column;
    align-items: center;

    .userinfo-avatar {
      width: 60rpx;
      height: 60rpx;
      border-radius: 50%;
    }

    .userinfo-nickname {
      color: #aaa;
      font-size: 25rpx;
      margin-bottom: 15rpx;
    }
  }

  .habits {
    &.list {
      .item {
        background: #FFFFFF;
        border-radius: 5rpx;
        margin: 7.5rpx 20rpx;
        padding: 20rpx 50rpx;
        .left-part {
          float: left;
          .name {
            color: #333;
            font-size: 35rpx;

          }
          .score {
            font-size: 25rpx;
            margin-top: 10rpx;
            color: #9398a7;
          }
        }
        .habit-btn {
          padding: 10rpx;
          font-size: 20rpx;
          display: inline-block;
          float: right;
          border: 0;
          background: unset;
          margin-top: 15rpx;
          overflow: unset;
        }
        &:after {
          clear: both;
          content: '';
          display: block;
        }
      }
    }
  }
</style>
<template>
  <view class="container">
    <view class="total-score-section">
      <view class="left-part score-item">
        <view class="userinfo">
          <image class="userinfo-avatar" src="{{ userInfo.avatarUrl }}" background-size="cover"/>
          <view class="userinfo-nickname">{{ userInfo.nickName }}</view>
        </view>
        <view class="today-score">‰ªäÂ§© 56ÂàÜ</view>
        <view class="this-score">Êú¨Âë® 123ÂàÜ</view>
      </view>
      <view class="pk">‚ö°</view>
      <view class="right-part score-item">
        <view class="userinfo">
          <image class="userinfo-avatar" src="{{ userInfo.avatarUrl }}" background-size="cover"/>
          <view class="userinfo-nickname">{{ userInfo.nickName }}</view>
        </view>
        <view class="today-score">‰ªäÂ§© 78ÂàÜ</view>
        <view class="this-score">Êú¨Âë® 142ÂàÜ</view>
      </view>
    </view>

    <view class="habits list">
      <repeat for="{{habits}}" item="habit" key="{{habit.id}}">
        <view class="item">
          <view class="left-part">
            <view class="name">{{habit.name}}</view>
            <view class="score">üíØ {{habit.score}}ÂàÜ</view>
          </view>
          <button class="habit-btn" @tap="finishHabit({{habit.id}})">‚ö° ÂÆåÊàê‚ö°</button>
        </view>
      </repeat>
    </view>
    <toast />
  </view>
</template>

<script>
  import wepy      from 'wepy';
  import Toast     from 'wepy-com-toast';

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '‰∫≤ÂØÜ‰π†ÊÉØ'
    }
    components = {
      toast: Toast
    }

    data = {
      habits: [],
      userInfo: {
        nickName: 'Âä†ËΩΩ‰∏≠...'
      }
    }

    methods = {
      finishHabit(habitId) {
        let self = this;
        wepy.request({
          url: 'http://localhost:4000/api/checkIn',
          method: 'POST',
          data: {
            openId: '88888888',
            code: '88888888',
            habitId: habitId
          },
          success: function ({ data }) {
            if (data.success) {
              self.onLoadHabits();
            }
          }
        });
      }
    }

    onLoadHabits() {
      let self = this;
      wepy.request({
        url: 'http://localhost:4000/api/habit',
        data: {
          openId: '88888888',
          code: '88888888'
        },
        success: function ({ data }) {
          self.habits = data.data;
          self.$apply();
        }
      });
    }

    onLoad() {
      let self = this;
      this.$parent.getUserInfo(function (userInfo) {
        if (userInfo) {
          self.userInfo = userInfo;
        }
        self.$apply();
      });
      this.onLoadHabits();
    }
  }
</script>
